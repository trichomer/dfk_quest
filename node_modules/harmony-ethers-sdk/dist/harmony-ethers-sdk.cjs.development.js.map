{"version":3,"file":"harmony-ethers-sdk.cjs.development.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/address.ts","../src/types.ts","../src/transactions.ts","../src/formatter.ts","../src/provider.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { isAddress, getAddress as getHexAddress } from \"@ethersproject/address\";\r\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\r\nimport { bech32 } from \"bech32\";\r\n\r\n// HRP is the human-readable part of Harmony bech32 addresses\r\nexport const HRP = \"one\";\r\nexport const tHRP = \"tone\";\r\n\r\nexport const isBech32Address = (raw: string): boolean => {\r\n  return !!raw.match(/^one1[qpzry9x8gf2tvdw0s3jn54khce6mua7l]{38}/);\r\n};\r\n\r\nexport const isBech32TestNetAddress = (raw: string): boolean => {\r\n  return !!raw.match(/^tone1[qpzry9x8gf2tvdw0s3jn54khce6mua7l]{38}/);\r\n};\r\n\r\nexport class HarmonyAddress {\r\n  static isValidBasic(str: string) {\r\n    const toTest = new HarmonyAddress(str);\r\n    return toTest.raw === toTest.basic;\r\n  }\r\n\r\n  static isValidChecksum(str: string) {\r\n    const toTest = new HarmonyAddress(str);\r\n    return toTest.raw === toTest.checksum;\r\n  }\r\n\r\n  static isValidBech32(str: string) {\r\n    const toTest = new HarmonyAddress(str);\r\n    return toTest.raw === toTest.bech32;\r\n  }\r\n\r\n  static isValidBech32TestNet(str: string) {\r\n    const toTest = new HarmonyAddress(str);\r\n    return toTest.raw === toTest.bech32TestNet;\r\n  }\r\n\r\n  raw: string;\r\n  basic: string;\r\n\r\n  get basicHex() {\r\n    return hexlify(this.basic);\r\n  }\r\n\r\n  get checksum() {\r\n    return getHexAddress(this.basic);\r\n  }\r\n\r\n  get bech32() {\r\n    return bech32.encode(HRP, bech32.toWords(arrayify(this.basic)));\r\n  }\r\n\r\n  get bech32TestNet() {\r\n    return bech32.encode(tHRP, bech32.toWords(arrayify(this.basic)));\r\n  }\r\n\r\n  constructor(raw: string) {\r\n    this.raw = raw;\r\n    this.basic = this.getBasic(this.raw);\r\n  }\r\n\r\n  private getBasic(addr: string) {\r\n    if (isAddress(addr)) {\r\n      return getHexAddress(addr).substring(2);\r\n    }\r\n\r\n    if (isBech32Address(addr) || isBech32TestNetAddress(addr)) {\r\n      const { prefix, words } = bech32.decode(addr);\r\n      if (prefix === HRP || prefix === tHRP) {\r\n        return getHexAddress(hexlify(bech32.fromWords(words))).substring(2);\r\n      }\r\n    }\r\n\r\n    throw new Error(`\"${addr}\" is an invalid address format`);\r\n  }\r\n}\r\n\r\nexport function getAddress(address: string) {\r\n  try {\r\n    return new HarmonyAddress(address);\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n","import { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\r\nimport { TransactionRequest as EthTransactionRequest, TransactionReceipt as EthTransactionReceipt } from \"@ethersproject/abstract-provider\";\r\nimport { UnsignedTransaction as EthUnsignedTransaction, Transaction as EthTransaction } from \"@ethersproject/transactions\";\r\n\r\ninterface BlockBase {\r\n  hash: string;\r\n  parentHash: string;\r\n  number: number;\r\n\r\n  timestamp: number;\r\n  nonce: string;\r\n  difficulty: number;\r\n\r\n  gasLimit: BigNumber;\r\n  gasUsed: BigNumber;\r\n\r\n  miner: string;\r\n  extraData: string;\r\n\r\n  // Harmony\r\n\r\n  epoch: BigNumberish;\r\n  shardID: BigNumberish;\r\n  viewID: string;\r\n\r\n  transactions: Array<string | TransactionResponse>;\r\n  stakingTransactions: Array<string | TransactionResponse>;\r\n}\r\n\r\nexport interface Block extends BlockBase {\r\n  transactions: Array<string>;\r\n  stakingTransactions: Array<string>;\r\n  _difficulty: BigNumber;\r\n}\r\n\r\nexport interface BlockWithTransactions extends BlockBase {\r\n  transactions: Array<TransactionResponse>;\r\n  stakingTransactions: Array<TransactionResponse>;\r\n  _difficulty: BigNumber;\r\n}\r\n\r\nexport enum Directive {\r\n  CreateValidator,\r\n  EditValidator,\r\n  Delegate,\r\n  Undelegate,\r\n  CollectRewards,\r\n}\r\n\r\nexport interface Description {\r\n  name: string;\r\n  identity: string;\r\n  website: string;\r\n  securityContact: string;\r\n  details: string;\r\n}\r\n\r\nexport interface CommissionRate {\r\n  rate: string;\r\n  maxRate: string;\r\n  maxChangeRate: string;\r\n}\r\n\r\nexport interface CreateValidatorMsg {\r\n  validatorAddress: string;\r\n  description: Description;\r\n  commissionRates: CommissionRate;\r\n  minSelfDelegation: BigNumberish;\r\n  maxTotalDelegation: BigNumberish;\r\n  slotPubKeys: string[];\r\n  slotKeySigs?: string[];\r\n  amount: BigNumberish;\r\n}\r\n\r\nexport interface EditValidatorMsg {\r\n  validatorAddress: string;\r\n  description?: Partial<Description>;\r\n  commissionRate?: string;\r\n  minSelfDelegation?: BigNumberish;\r\n  maxTotalDelegation?: BigNumberish;\r\n  slotKeyToRemove?: string;\r\n  slotKeyToAdd?: string;\r\n  slotKeySig?: string;\r\n  active?: boolean;\r\n}\r\n\r\nexport interface DelegateMsg {\r\n  delegatorAddress: string;\r\n  validatorAddress: string;\r\n  amount: BigNumberish;\r\n}\r\n\r\nexport interface UndelegateMsg {\r\n  delegatorAddress: string;\r\n  validatorAddress: string;\r\n  amount: BigNumberish;\r\n}\r\n\r\nexport interface CollectRewardsMsg {\r\n  delegatorAddress: string;\r\n}\r\n\r\nexport type Msg = CommissionRate | CreateValidatorMsg | EditValidatorMsg | DelegateMsg | UndelegateMsg | CollectRewardsMsg;\r\n\r\nexport interface UnsignedTransaction extends Omit<EthUnsignedTransaction, \"accessList\" | \"type\"> {\r\n  shardID?: number;\r\n  toShardID?: number;\r\n}\r\n\r\nexport interface UnsignedStakingTransaction extends Omit<EthUnsignedTransaction, \"accessList\" | \"type\"> {\r\n  type: Directive;\r\n  msg: Msg;\r\n}\r\n\r\nexport interface Transaction extends Omit<EthTransaction, \"accessList\" | \"type\"> {\r\n  shardID: BigNumberish;\r\n  toShardID: BigNumberish;\r\n}\r\n\r\nexport interface StakingTransaction extends Omit<EthTransaction, \"accessList\" | \"type\" | \"data\" | \"value\" | \"to\"> {\r\n  type: Directive;\r\n  msg: Msg | null;\r\n}\r\n\r\ninterface Response {\r\n  blockNumber?: number;\r\n  blockHash?: string;\r\n  timestamp?: number;\r\n\r\n  confirmations: number;\r\n}\r\n\r\nexport interface TransactionResponse extends Transaction, Response {\r\n  hash: string;\r\n\r\n  // Not optional (as it is in Transaction)\r\n  from: string;\r\n\r\n  // The raw transaction\r\n  raw?: string;\r\n\r\n  shardID: number;\r\n  toShardID: number;\r\n\r\n  // This function waits until the transaction has been mined\r\n  wait: (confirmations?: number) => Promise<TransactionReceipt>;\r\n}\r\n\r\nexport interface StakingTransactionResponse extends Transaction, Response {\r\n  hash: string;\r\n\r\n  type: Directive;\r\n  msg: Msg;\r\n\r\n  // Not optional (as it is in Transaction)\r\n  from: string;\r\n\r\n  // // The raw transaction\r\n  // raw?: string;\r\n\r\n  // wait: (confirmations?: number) => Promise<StakingTransactionReceipt>;\r\n}\r\n\r\nexport interface TransactionRequest extends Omit<EthTransactionRequest, \"accessList\" | \"type\"> {\r\n  shardID?: number;\r\n  toShardID?: number;\r\n}\r\n\r\nexport interface StakingTransactionRequest {\r\n  type: Directive;\r\n  msg: Msg;\r\n\r\n  nonce?: number;\r\n  gasLimit?: BigNumberish;\r\n  gasPrice?: BigNumberish;\r\n  chainId?: number;\r\n}\r\n\r\nexport interface TransactionReceipt extends EthTransactionReceipt {}\r\n\r\nexport interface CXTransactionReceipt {\r\n  blockHash: string;\r\n  blockNumber: number;\r\n  transactionHash: string;\r\n  to: string;\r\n  from: string;\r\n  shardID: number;\r\n  toShardID: number;\r\n  value: BigNumberish;\r\n}\r\n","import {\r\n  arrayify,\r\n  BytesLike,\r\n  SignatureLike,\r\n  splitSignature,\r\n  stripZeros,\r\n  hexlify,\r\n  hexZeroPad,\r\n  isBytesLike,\r\n  DataOptions,\r\n} from \"@ethersproject/bytes\";\r\nimport { parseUnits } from \"@ethersproject/units\";\r\nimport { keccak256 } from \"@ethersproject/keccak256\";\r\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\r\nimport { recoverAddress } from \"@ethersproject/transactions\";\r\nimport { Logger } from \"@ethersproject/logger\";\r\nimport * as RLP from \"@ethersproject/rlp\";\r\nimport { Zero, One, Two } from \"@ethersproject/constants\";\r\nimport { checkProperties } from \"@ethersproject/properties\";\r\nimport { getAddress } from \"./address\";\r\nimport {\r\n  CollectRewardsMsg,\r\n  CommissionRate,\r\n  CreateValidatorMsg,\r\n  DelegateMsg,\r\n  Description,\r\n  Directive,\r\n  EditValidatorMsg,\r\n  Msg,\r\n  UndelegateMsg,\r\n  Transaction,\r\n  StakingTransaction,\r\n  UnsignedTransaction,\r\n  UnsignedStakingTransaction,\r\n} from \"./types\";\r\nconst logger = new Logger(\"hmy_transaction/0.0.1\");\r\n\r\nconst transactionFields = [\r\n  { name: \"nonce\", maxLength: 32, numeric: true },\r\n  { name: \"gasPrice\", maxLength: 32, numeric: true },\r\n  { name: \"gasLimit\", maxLength: 32, numeric: true },\r\n  { name: \"shardID\", maxLength: 16, numeric: true },\r\n  { name: \"toShardID\", maxLength: 16, numeric: true },\r\n  { name: \"to\", length: 20 },\r\n  { name: \"value\", maxLength: 32, numeric: true },\r\n  { name: \"data\" },\r\n];\r\n\r\nconst allowedTransactionKeys: { [key: string]: boolean } = {\r\n  nonce: true,\r\n  gasLimit: true,\r\n  gasPrice: true,\r\n  shardID: true,\r\n  toShardID: true,\r\n  to: true,\r\n  value: true,\r\n  data: true,\r\n  chainId: true,\r\n};\r\n\r\nfunction formatNumber(value: BigNumberish, name: string): Uint8Array {\r\n  const result = stripZeros(BigNumber.from(value).toHexString());\r\n  if (result.length > 32) {\r\n    logger.throwArgumentError(\"invalid length for \" + name, \"transaction:\" + name, value);\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction formatDecimal(value: BigNumberish | string): Array<string> {\r\n  if (typeof value === \"string\") {\r\n    return [parseUnits(<string>value, 18).toHexString()];\r\n  }\r\n\r\n  return [BigNumber.from(value).toHexString()];\r\n}\r\n\r\nfunction formatDescription(value: Partial<Description>): Array<Uint8Array> {\r\n  return [\r\n    new Uint8Array(Buffer.from(value.name ?? \"\")),\r\n    new Uint8Array(Buffer.from(value.identity ?? \"\")),\r\n    new Uint8Array(Buffer.from(value.website ?? \"\")),\r\n    new Uint8Array(Buffer.from(value.securityContact ?? \"\")),\r\n    new Uint8Array(Buffer.from(value.details ?? \"\")),\r\n  ];\r\n}\r\n\r\nfunction formatComissionRates(value: CommissionRate): Array<Array<string>> {\r\n  return [formatDecimal(value.rate), formatDecimal(value.maxRate), formatDecimal(value.maxChangeRate)];\r\n}\r\n\r\nfunction formatMsg(type: Directive, value: Msg): any {\r\n  switch (type) {\r\n    case Directive.CreateValidator: {\r\n      const msg = value as CreateValidatorMsg;\r\n      return [\r\n        getAddress(msg.validatorAddress).checksum,\r\n        formatDescription(msg.description),\r\n        formatComissionRates(msg.commissionRates),\r\n        formatNumber(msg.minSelfDelegation, \"minSelfDelegation\"),\r\n        formatNumber(msg.maxTotalDelegation, \"maxTotalDelegation\"),\r\n        msg.slotPubKeys.map((key) => arrayify(key)),\r\n        msg.slotKeySigs?.map((sig) => arrayify(sig)),\r\n        formatNumber(msg.amount, \"amount\"),\r\n      ];\r\n    }\r\n    case Directive.EditValidator: {\r\n      const msg = value as EditValidatorMsg;\r\n      return [\r\n        getAddress(msg.validatorAddress).checksum,\r\n        msg.description ? formatDescription(msg.description) : [],\r\n        msg.commissionRate ? formatDecimal(msg.commissionRate) : \"0x\",\r\n        msg.minSelfDelegation ? formatNumber(msg.minSelfDelegation, \"minSelfDelegation\") : \"0x\",\r\n        msg.maxTotalDelegation ? formatNumber(msg.maxTotalDelegation, \"maxTotalDelegation\") : \"0x\",\r\n        msg.slotKeyToRemove ? hexlify(msg.slotKeyToRemove) : \"0x\",\r\n        msg.slotKeyToAdd ? hexlify(msg.slotKeyToAdd) : \"0x\",\r\n        msg.slotKeySig ? hexlify(msg.slotKeySig) : \"0x\",\r\n        msg.active != null ? (msg.active ? One.toHexString() : Two.toHexString()) : Zero.toHexString(),\r\n      ];\r\n    }\r\n    case Directive.Delegate:\r\n    case Directive.Undelegate: {\r\n      const msg = value as DelegateMsg | UndelegateMsg;\r\n      return [getAddress(msg.delegatorAddress).checksum, getAddress(msg.validatorAddress).checksum, formatNumber(msg.amount, \"amount\")];\r\n    }\r\n    case Directive.CollectRewards: {\r\n      const msg = value as CollectRewardsMsg;\r\n      return [getAddress(msg.delegatorAddress).checksum];\r\n    }\r\n    default:\r\n      logger.throwArgumentError(\"invalid type\", \"type\", hexlify(type));\r\n  }\r\n}\r\n\r\nexport function serialize(transaction: UnsignedStakingTransaction | UnsignedTransaction, signature?: SignatureLike): string {\r\n  if (\"type\" in transaction) {\r\n    return serializeStakingTransaction(transaction, signature);\r\n  }\r\n\r\n  return serializeTransaction(transaction, signature);\r\n}\r\n\r\nfunction serializeTransaction(transaction: UnsignedTransaction, signature?: SignatureLike): string {\r\n  checkProperties(transaction, allowedTransactionKeys);\r\n\r\n  const fields: Array<string | Uint8Array> = [];\r\n\r\n  transactionFields.forEach(function (fieldInfo) {\r\n    let value = (<any>transaction)?.[fieldInfo.name] ?? [];\r\n    const options: DataOptions = {};\r\n\r\n    if (fieldInfo.numeric) {\r\n      options.hexPad = \"left\";\r\n    }\r\n\r\n    value = arrayify(hexlify(value, options));\r\n\r\n    // Fixed-width field\r\n    if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\r\n      logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, \"transaction:\" + fieldInfo.name, value);\r\n    }\r\n\r\n    // Variable-width (with a maximum)\r\n    if (fieldInfo.maxLength) {\r\n      value = stripZeros(value);\r\n      if (value.length > fieldInfo.maxLength) {\r\n        logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, \"transaction:\" + fieldInfo.name, value);\r\n      }\r\n    }\r\n\r\n    fields.push(hexlify(value));\r\n  });\r\n\r\n  return encodeTransaction(transaction, fields, signature);\r\n}\r\n\r\nexport function serializeStakingTransaction(transaction: UnsignedStakingTransaction, signature?: SignatureLike): string {\r\n  const fields: any = [\r\n    transaction.type === 0 ? \"0x\" : BigNumber.from(transaction.type).toHexString(),\r\n    formatMsg(transaction.type, transaction.msg),\r\n    formatNumber(transaction.nonce || 0, \"nonce\"),\r\n    formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\r\n    formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\r\n  ];\r\n\r\n  return encodeTransaction(transaction, fields, signature);\r\n}\r\n\r\nfunction encodeTransaction(transaction: UnsignedTransaction, fields: Array<string | Uint8Array>, signature?: SignatureLike): string {\r\n  let chainId = 1;\r\n  if (transaction.chainId != null) {\r\n    // A chainId was provided; if non-zero we'll use EIP-155\r\n    chainId = transaction.chainId;\r\n\r\n    if (typeof chainId !== \"number\") {\r\n      logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\r\n    }\r\n  } else if (signature && !isBytesLike(signature) && signature.v && signature.v > 28 ) {\r\n    // No chainId provided, but the signature is signing with EIP-155; derive chainId\r\n    chainId = Math.floor((signature.v - 35) / 2);\r\n  }\r\n\r\n  fields.push(hexlify(chainId)); // @TODO: hexValue?\r\n  fields.push(\"0x\");\r\n  fields.push(\"0x\");\r\n\r\n  // Requesting an unsigned transation\r\n  if (!signature) {\r\n    return RLP.encode(fields);\r\n  }\r\n\r\n  const sig = splitSignature(signature);\r\n  let v = 27 + (sig.recoveryParam || 0);\r\n  fields.pop();\r\n  fields.pop();\r\n  fields.pop();\r\n  v += chainId * 2 + 8;\r\n\r\n  fields.push(hexlify(v));\r\n  fields.push(stripZeros(arrayify(sig.r) || []));\r\n  fields.push(stripZeros(arrayify(sig.s) || []));\r\n\r\n  return RLP.encode(fields);\r\n}\r\n\r\nfunction handleAddress(value: string): string {\r\n  if (value === \"0x\") {\r\n    return '';\r\n  }\r\n  return getAddress(value).checksum;\r\n}\r\n\r\nfunction handleNumber(value: string): BigNumber {\r\n  if (value === \"0x\") {\r\n    return Zero;\r\n  }\r\n  return BigNumber.from(value);\r\n}\r\n\r\nfunction handleDecimal(value: string): string {\r\n  return value;\r\n}\r\n\r\nfunction handleText(value: string): string {\r\n  return Buffer.from(arrayify(value)).toString();\r\n}\r\n\r\nfunction handleValidatorDescription(value: Array<string>): Description {\r\n  return {\r\n    name: handleText(value[0]),\r\n    identity: handleText(value[1]),\r\n    website: handleText(value[2]),\r\n    securityContact: handleText(value[3]),\r\n    details: handleText(value[4]),\r\n  };\r\n}\r\n\r\nfunction handleValidatorCommissionRates(value: Array<string>): CommissionRate {\r\n  return {\r\n    rate: handleDecimal(value[0]),\r\n    maxRate: handleDecimal(value[1]),\r\n    maxChangeRate: handleDecimal(value[2]),\r\n  };\r\n}\r\n\r\nfunction handleActive(value: string): boolean | null {\r\n  const status = BigNumber.from(value);\r\n\r\n  if (status.eq(Zero)) {\r\n    return null;\r\n  }\r\n\r\n  if (status.eq(One)) {\r\n    return true;\r\n  }\r\n\r\n  if (status.eq(Two)) {\r\n    return false;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction handleMsg(type: Directive, value: Array<string | Array<string>>): Msg | null {\r\n  switch (type) {\r\n    case Directive.CreateValidator:\r\n      return {\r\n        validatorAddress: handleAddress(<string>value[0]),\r\n        description: handleValidatorDescription(<Array<string>>value[1]),\r\n        commissionRates: handleValidatorCommissionRates(<Array<string>>value[2]),\r\n        minSelfDelegation: handleNumber(<string>value[3]),\r\n        maxTotalDelegation: handleNumber(<string>value[4]),\r\n        slotPubKeys: value[5],\r\n        slotKeySigs: value[6],\r\n        amount: handleNumber(<string>value[7]),\r\n      } as CreateValidatorMsg;\r\n    case Directive.EditValidator:\r\n      return {\r\n        validatorAddress: handleAddress(<string>value[0]),\r\n        description: handleValidatorDescription(<Array<string>>value[1]),\r\n        commissionRate: handleDecimal(<string>value[2]),\r\n        minSelfDelegation: handleNumber(<string>value[3]),\r\n        maxTotalDelegation: handleNumber(<string>value[4]),\r\n        slotKeyToRemove: value[5],\r\n        slotKeyToAdd: value[6],\r\n        slotKeySig: value[7],\r\n        active: handleActive(<string>value[8]),\r\n      } as EditValidatorMsg;\r\n    case Directive.Undelegate:\r\n    case Directive.Delegate:\r\n      return {\r\n        delegatorAddress: handleAddress(<string>value[0]),\r\n        validatorAddress: handleAddress(<string>value[1]),\r\n        amount: handleNumber(<string>value[2]),\r\n      } as DelegateMsg | UndelegateMsg;\r\n    case Directive.CollectRewards:\r\n      return {\r\n        delegatorAddress: handleAddress(<string>value[0]),\r\n      } as CollectRewardsMsg;\r\n    default:\r\n      logger.throwArgumentError(\"invalid type\", \"type\", hexlify(type));\r\n      return null;\r\n  }\r\n}\r\n\r\nfunction handleStakingTransaction(transaction: any): StakingTransaction {\r\n  if (transaction.length !== 5 && transaction.length !== 8) {\r\n    logger.throwArgumentError(\"invalid component count for staking transaction\", \"payload\", \"\");\r\n  }\r\n\r\n  const directive: Directive = transaction[0] === \"0x\" ? 0 : handleNumber(transaction[0]).toNumber();\r\n\r\n  const tx: StakingTransaction = {\r\n    type: directive,\r\n    msg: handleMsg(directive, transaction[1]),\r\n    nonce: handleNumber(transaction[2]).toNumber(),\r\n    gasPrice: handleNumber(transaction[3]),\r\n    gasLimit: handleNumber(transaction[4]),\r\n    chainId: 1,\r\n  };\r\n\r\n  // Unsigned Transaction\r\n  if (transaction.length === 5) {\r\n    return tx;\r\n  }\r\n\r\n  try {\r\n    tx.v = BigNumber.from(transaction[5]).toNumber();\r\n  } catch (error) {\r\n    return tx;\r\n  }\r\n\r\n  tx.r = hexZeroPad(transaction[6], 32);\r\n  tx.s = hexZeroPad(transaction[7], 32);\r\n\r\n  if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\r\n    // EIP-155 unsigned transaction\r\n    tx.chainId = tx.v;\r\n    tx.v = 0;\r\n  } else {\r\n    // Signed Tranasaction\r\n\r\n    tx.chainId = Math.floor((tx.v - 35) / 2);\r\n\r\n    let recoveryParam = tx.v - 27;\r\n\r\n    const raw = transaction.slice(0, 5);\r\n\r\n    raw.push(hexlify(tx.chainId));\r\n    raw.push(\"0x\");\r\n    raw.push(\"0x\");\r\n    recoveryParam -= tx.chainId * 2 + 8;\r\n\r\n    const digest = keccak256(RLP.encode(raw));\r\n    try {\r\n      tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\r\n    } catch (error) {}\r\n\r\n    tx.hash = keccak256(RLP.encode(transaction));\r\n  }\r\n\r\n  return tx;\r\n}\r\n\r\nfunction handleTransaction(transaction: any): Transaction {\r\n  if (transaction.length !== 11 && transaction.length !== 8) {\r\n    logger.throwArgumentError(\"invalid raw transaction\", \"transaction\", \"\");\r\n  }\r\n\r\n  const tx: Transaction = {\r\n    nonce: handleNumber(transaction[0]).toNumber(),\r\n    gasPrice: handleNumber(transaction[1]),\r\n    gasLimit: handleNumber(transaction[2]),\r\n    shardID: handleNumber(transaction[3]),\r\n    toShardID: handleNumber(transaction[4]),\r\n    to: handleAddress(transaction[5]),\r\n    value: handleNumber(transaction[6]),\r\n    data: transaction[7],\r\n    chainId: 1,\r\n  };\r\n\r\n  // Legacy unsigned transaction\r\n  if (transaction.length === 8) {\r\n    return tx;\r\n  }\r\n\r\n  try {\r\n    tx.v = BigNumber.from(transaction[8]).toNumber();\r\n  } catch (error) {\r\n    return tx;\r\n  }\r\n\r\n  tx.r = hexZeroPad(transaction[9], 32);\r\n  tx.s = hexZeroPad(transaction[10], 32);\r\n\r\n  if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\r\n    // EIP-155 unsigned transaction\r\n    tx.chainId = tx.v;\r\n    tx.v = 0;\r\n  } else {\r\n    // Signed Tranasaction\r\n\r\n    tx.chainId = Math.floor((tx.v - 35) / 2);\r\n\r\n    let recoveryParam = tx.v - 27;\r\n\r\n    const raw = transaction.slice(0, 8);\r\n\r\n    raw.push(hexlify(tx.chainId));\r\n    raw.push(\"0x\");\r\n    raw.push(\"0x\");\r\n    recoveryParam -= tx.chainId * 2 + 8;\r\n\r\n    const digest = keccak256(RLP.encode(raw));\r\n    try {\r\n      tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\r\n    } catch (error) {}\r\n\r\n    tx.hash = keccak256(RLP.encode(transaction));\r\n  }\r\n\r\n  return tx;\r\n}\r\n\r\nexport function parseTransaction(payload: BytesLike): Transaction {\r\n  return handleTransaction(RLP.decode(arrayify(payload)));\r\n}\r\n\r\nexport function parseStakingTransaction(payload: BytesLike): StakingTransaction {\r\n  return handleStakingTransaction(RLP.decode(arrayify(payload)));\r\n}\r\n\r\nexport function parse(rawTransaction: BytesLike): StakingTransaction | Transaction {\r\n  const payload = arrayify(rawTransaction);\r\n  const transaction = RLP.decode(payload);\r\n\r\n  if (Array.isArray(transaction[1])) {\r\n    return handleStakingTransaction(transaction);\r\n  }\r\n\r\n  return handleTransaction(transaction);\r\n}\r\n","import { BigNumber } from \"@ethersproject/bignumber\";\r\nimport { Formatter, TransactionReceipt } from \"@ethersproject/providers\";\r\nimport { parseUnits, formatUnits } from \"@ethersproject/units\";\r\nimport { Formats as BaseFormats, FormatFuncs } from \"@ethersproject/providers/lib/formatter\";\r\nimport { shallowCopy } from \"@ethersproject/properties\";\r\nimport { getAddress } from \"./address\";\r\nimport {\r\n  Transaction,\r\n  Msg,\r\n  Directive,\r\n  TransactionResponse,\r\n  StakingTransactionResponse,\r\n  CXTransactionReceipt,\r\n  StakingTransaction,\r\n  Block,\r\n} from \"./types\";\r\nimport { parseTransaction, parseStakingTransaction } from \"./transactions\";\r\n\r\ntype HarmonyFormats = {\r\n  stakingTransaction: FormatFuncs;\r\n\r\n  cXReceipt: FormatFuncs;\r\n\r\n  description: FormatFuncs;\r\n  commissionRate: FormatFuncs;\r\n\r\n  createValidatorMsg: FormatFuncs;\r\n  createValidatorRequestMsg: FormatFuncs;\r\n\r\n  editValidatorMsg: FormatFuncs;\r\n  editValidatorRequestMsg: FormatFuncs;\r\n\r\n  delegateMsg: FormatFuncs;\r\n  undelegateMsg: FormatFuncs;\r\n  collectRewardsMsg: FormatFuncs;\r\n\r\n  delegation: FormatFuncs;\r\n  undelegation: FormatFuncs;\r\n};\r\n\r\nexport interface Delegation {\r\n  validatorAddress: string;\r\n  delegatorAddress: string;\r\n  amount: number;\r\n  reward: number;\r\n  undelegations: {\r\n    amount: number;\r\n    reward: number;\r\n  }[];\r\n}\r\n\r\ntype Formats = BaseFormats & HarmonyFormats;\r\ninterface ExtendKeys {\r\n  [key: string]: number;\r\n}\r\ninterface TransactionTypes extends ExtendKeys {\r\n  CreateValidator: number,\r\n  EditValidator: number,\r\n  Delegate: number,\r\n  Undelegate: number,\r\n  CollectRewards: number,\r\n}\r\nconst TRANSACTION_TYPES: TransactionTypes = {\r\n  CreateValidator: 0,\r\n  EditValidator: 1,\r\n  Delegate: 2,\r\n  Undelegate: 3,\r\n  CollectRewards: 4,\r\n};\r\n\r\nexport default class HarmonyFormatter extends Formatter {\r\n  formats!: Formats;\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getDefaultFormats(): Formats {\r\n    const number = this.number.bind(this);\r\n    const address = this.address.bind(this);\r\n    const data = this.data.bind(this);\r\n    const hash = this.hash.bind(this);\r\n    const bigNumber = this.bigNumber.bind(this);\r\n    const decimal = this.decimal.bind(this);\r\n    const transactionType = this.transactionType.bind(this);\r\n\r\n    const value = (v: string) => v; // todo\r\n\r\n    const formats = super.getDefaultFormats() as Formats;\r\n\r\n    delete formats.transaction.type;\r\n    delete formats.transaction.accessList;\r\n    delete formats.transactionRequest.type;\r\n    delete formats.transactionRequest.accessList;\r\n\r\n    formats.transaction.shardID = number;\r\n    formats.transaction.toShardID = Formatter.allowNull(number);\r\n\r\n    formats.receipt.type = Formatter.allowNull(transactionType);\r\n\r\n    Object.assign(formats.block, {\r\n      nonce: number,\r\n      epoch: bigNumber,\r\n      viewID: number,\r\n      mixHash: hash,\r\n      stakingTransactions: Formatter.allowNull(Formatter.arrayOf(hash)),\r\n    });\r\n\r\n    formats.stakingTransaction = {\r\n      hash: hash,\r\n\r\n      type: transactionType,\r\n\r\n      blockHash: Formatter.allowNull(hash, null),\r\n      blockNumber: Formatter.allowNull(number, null),\r\n      transactionIndex: Formatter.allowNull(number, null),\r\n\r\n      confirmations: Formatter.allowNull(number, null),\r\n\r\n      gasPrice: bigNumber,\r\n      gasLimit: bigNumber,\r\n      nonce: number,\r\n\r\n      r: Formatter.allowNull(this.uint256.bind(this)),\r\n      s: Formatter.allowNull(this.uint256.bind(this)),\r\n      v: Formatter.allowNull(number),\r\n\r\n      raw: Formatter.allowNull(data),\r\n    };\r\n\r\n    Object.assign(formats.blockWithTransactions, {\r\n      nonce: number,\r\n      epoch: bigNumber,\r\n      viewID: number,\r\n      mixHash: hash,\r\n      stakingTransactions: Formatter.allowNull(Formatter.arrayOf(this.stakingTransactionResponse.bind(this))),\r\n    });\r\n\r\n    formats.cXReceipt = {\r\n      blockHash: hash,\r\n      blockNumber: number,\r\n      to: address,\r\n      from: address,\r\n      shardID: number,\r\n      toShardID: number,\r\n      value: bigNumber,\r\n      // confirmations: Formatter.allowNull(number, null),\r\n    };\r\n\r\n    // msgs formats\r\n\r\n    formats.description = {\r\n      name: value,\r\n      identity: value,\r\n      website: value,\r\n      securityContact: value,\r\n      details: value,\r\n    };\r\n\r\n    formats.commissionRate = {\r\n      rate: decimal,\r\n      maxRate: decimal,\r\n      maxChangeRate: decimal,\r\n    };\r\n\r\n    formats.createValidatorMsg = {\r\n      validatorAddress: address,\r\n      amount: bigNumber,\r\n      minSelfDelegation: bigNumber,\r\n      maxTotalDelegation: bigNumber,\r\n      slotPubKeys: Formatter.arrayOf(value),\r\n    };\r\n\r\n    formats.createValidatorRequestMsg = shallowCopy(formats.createValidatorMsg);\r\n    formats.createValidatorRequestMsg.slotKeySigs = Formatter.arrayOf(value);\r\n\r\n    formats.editValidatorMsg = {\r\n      validatorAddress: address,\r\n      commissionRate: Formatter.allowNull(decimal, \"0x0\"),\r\n      minSelfDelegation: Formatter.allowNull(bigNumber, \"0x0\"),\r\n      maxTotalDelegation: Formatter.allowNull(bigNumber, \"0x0\"),\r\n      slotPubKeyToAdd: Formatter.allowNull(value, null),\r\n      slotPubKeyToRemove: Formatter.allowNull(value, null),\r\n    };\r\n\r\n    formats.editValidatorRequestMsg = shallowCopy(formats.editValidatorMsg);\r\n    formats.editValidatorRequestMsg.slotKeySigs = Formatter.allowNull(Formatter.arrayOf(value), []);\r\n    formats.editValidatorRequestMsg.active = Formatter.allowNull((value) => value, null);\r\n\r\n    formats.delegateMsg = {\r\n      delegatorAddress: address,\r\n      validatorAddress: address,\r\n      amount: bigNumber,\r\n    };\r\n\r\n    formats.undelegateMsg = {\r\n      delegatorAddress: address,\r\n      validatorAddress: address,\r\n      amount: bigNumber,\r\n    };\r\n\r\n    formats.collectRewardsMsg = {\r\n      delegatorAddress: address,\r\n    };\r\n\r\n    formats.undelegation = {\r\n      amount: value,\r\n      epoch: number,\r\n    };\r\n\r\n    formats.delegation = {\r\n      delegatorAddress: address,\r\n      validatorAddress: address,\r\n      amount: value,\r\n      reward: value,\r\n      undelegations: Formatter.allowNull(\r\n        Formatter.arrayOf((undelegation) =>\r\n          Formatter.check(formats.undelegation, {\r\n            amount: undelegation.Amount,\r\n            epoch: undelegation.Epoch,\r\n          })\r\n        ),\r\n        []\r\n      ),\r\n    };\r\n\r\n    return formats;\r\n  }\r\n\r\n  decimal(value: any): BigNumber | null {\r\n    if (value === \"0x0\") {\r\n      return null;\r\n    }\r\n    return parseUnits(value, 18);\r\n  }\r\n\r\n  transaction(value: any): Transaction {\r\n    return parseTransaction(value);\r\n  }\r\n\r\n  stakingTransaction(value: any): StakingTransaction {\r\n    return parseStakingTransaction(value);\r\n  }\r\n\r\n  transactionType(value: any): Directive {\r\n    let type = value;\r\n    if (typeof value === \"string\") {\r\n      type = TRANSACTION_TYPES[value];\r\n    }\r\n\r\n    // throw on invalid type ?\r\n\r\n    return this.number(type);\r\n  }\r\n\r\n  msg(type: any, value: any): Msg {\r\n    switch (type) {\r\n      case Directive.CreateValidator: {\r\n        let msg = Formatter.check(this.formats.createValidatorMsg, value);\r\n        msg.commissionRates = Formatter.check(this.formats.commissionRate, {\r\n          rate: formatUnits(BigNumber.from(value.commissionRate), 18),\r\n          maxRate: formatUnits(BigNumber.from(value.maxCommissionRate), 18),\r\n          maxChangeRate: formatUnits(BigNumber.from(value.maxChangeRate), 18),\r\n        });\r\n        msg.description = Formatter.check(this.formats.description, value);\r\n        return msg;\r\n      }\r\n      case Directive.EditValidator: {\r\n        let msg = Formatter.check(this.formats.editValidatorMsg, value);\r\n        msg.description = Formatter.check(this.formats.description, value);\r\n        return msg;\r\n      }\r\n      case Directive.Delegate:\r\n        return Formatter.check(this.formats.delegateMsg, value);\r\n      case Directive.Undelegate:\r\n        return Formatter.check(this.formats.undelegateMsg, value);\r\n      case Directive.CollectRewards:\r\n        return Formatter.check(this.formats.collectRewardsMsg, value);\r\n      default:\r\n        throw new Error(\"Invalid msg type\");\r\n    }\r\n  }\r\n\r\n  address(value: any): string {\r\n    return getAddress(value).checksum;\r\n  }\r\n\r\n  _block(value: any, format: any): Block {\r\n    return super._block(value, format) as Block;\r\n  }\r\n\r\n  block(value: any): Block {\r\n    return this._block(value, this.formats.block);\r\n  }\r\n\r\n  blockWithTransactions(value: any): Block {\r\n    return this._block(value, this.formats.blockWithTransactions);\r\n  }\r\n\r\n  transactionResponse(transaction: any): TransactionResponse {\r\n    // Rename gas to gasLimit\r\n    if (transaction.gas != null && transaction.gasLimit == null) {\r\n      transaction.gasLimit = transaction.gas;\r\n    }\r\n\r\n    // Rename input to data\r\n    if (transaction.input != null && transaction.data == null) {\r\n      transaction.data = transaction.input;\r\n    }\r\n\r\n    // If to and creates are empty, populate the creates from the transaction\r\n    if (transaction.to == null && transaction.creates == null) {\r\n      transaction.creates = this.contractAddress(transaction);\r\n    }\r\n\r\n    const result: TransactionResponse = Formatter.check(this.formats.transaction, transaction);\r\n\r\n    // 0x0000... should actually be empty STRING\r\n    if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\r\n      result.blockHash = '';\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  stakingTransactionResponse(transaction: any): StakingTransactionResponse {\r\n    if (transaction.gas != null && transaction.gasLimit == null) {\r\n      transaction.gasLimit = transaction.gas;\r\n    }\r\n\r\n    const result: StakingTransactionResponse = Formatter.check(this.formats.stakingTransaction, transaction);\r\n    result.msg = this.msg(result.type, transaction.msg);\r\n    return result;\r\n  }\r\n\r\n  receipt(value: any): TransactionReceipt {\r\n    if (value.type != null) {\r\n      value.from = value.sender;\r\n    }\r\n\r\n    const result: TransactionReceipt = Formatter.check(this.formats.receipt, value);\r\n    return result;\r\n  }\r\n\r\n  cXReceipt(value: any): CXTransactionReceipt {\r\n    return Formatter.check(this.formats.cXReceipt, value);\r\n  }\r\n\r\n  delegation(value: any): Delegation {\r\n    return Formatter.check(this.formats.delegation, {\r\n      validatorAddress: value.validator_address,\r\n      delegatorAddress: value.delegator_address,\r\n      amount: value.amount,\r\n      reward: value.reward,\r\n      undelegations: value.Undelegations,\r\n    });\r\n  }\r\n}\r\n","import { BlockTag, BaseProvider, JsonRpcProvider } from \"@ethersproject/providers\";\r\nimport { getStatic } from \"@ethersproject/properties\";\r\nimport { BigNumber } from \"@ethersproject/bignumber\";\r\nimport { hexlify } from \"@ethersproject/bytes\";\r\nimport { randomBytes } from \"crypto\";\r\nimport { Deferrable } from \"@ethersproject/properties\";\r\nimport { Network } from \"@ethersproject/networks\";\r\nimport { Logger } from \"@ethersproject/logger\";\r\nimport { parseEther } from \"@ethersproject/units\";\r\nimport { ConnectionInfo, poll } from \"@ethersproject/web\";\r\nimport {\r\n  TransactionRequest,\r\n  Transaction,\r\n  TransactionResponse,\r\n  TransactionReceipt,\r\n  CXTransactionReceipt,\r\n  StakingTransactionResponse,\r\n  StakingTransaction,\r\n  Block,\r\n  BlockWithTransactions,\r\n} from \"./types\";\r\nimport HarmonyFormatter, { Delegation } from \"./formatter\";\r\nconst logger = new Logger(\"hmy_provider/0.0.1\");\r\n\r\nfunction timer(timeout: number): Promise<any> {\r\n  return new Promise(function (resolve) {\r\n    setTimeout(resolve, timeout);\r\n  });\r\n}\r\n\r\nexport interface HarmonyProvider extends BaseProvider {\r\n  network: HarmonyNetwork;\r\n\r\n  // Execution\r\n  sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse>;\r\n  sendStakingTransaction(signedTransaction: string | Promise<string>): Promise<StakingTransactionResponse>;\r\n\r\n  call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\r\n  estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber>;\r\n\r\n  // Queries\r\n  getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block>;\r\n  getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions>;\r\n\r\n  getTransaction(transactionHash: string): Promise<TransactionResponse>;\r\n  getTransactionReceipt(transactionHash: string): Promise<TransactionReceipt>;\r\n  getCXTransactionReceipt(transactionHash: string): Promise<CXTransactionReceipt>;\r\n\r\n  getStakingTransaction(transactionHash: string): Promise<StakingTransactionResponse>;\r\n\r\n  getCirculatingSupply(): Promise<BigNumber>;\r\n  getTotalSupply(): Promise<BigNumber>;\r\n\r\n  getEpoch(): Promise<number>;\r\n  getEpochLastBlock(epoch: number): Promise<number>;\r\n\r\n  getLeader(): Promise<string>;\r\n\r\n  getValidatorsAddresses(): Promise<Array<string>>;\r\n  getActiveValidatorsAddresses(): Promise<Array<string>>;\r\n\r\n  getDelegationsByValidator(validatorAddress: string): Promise<Array<Delegation>>;\r\n  getDelegationsByDelegator(delegatorAddress: string): Promise<Array<Delegation>>;\r\n}\r\n\r\ninterface ShardStructure {\r\n  current: boolean;\r\n  http: string;\r\n  shardID: number;\r\n  ws: string;\r\n}\r\n\r\ninterface HarmonyNetwork extends Network {\r\n  shardID: number;\r\n  shardingStructure?: ShardStructure[];\r\n}\r\n\r\nexport type Networkish = HarmonyNetwork | number;\r\n\r\nconst networks = [\r\n  {\r\n    name: \"mainnet\",\r\n    chainId: 1,\r\n  },\r\n  {\r\n    name: \"testnet\",\r\n    chainId: 2,\r\n  },\r\n  {\r\n    name: \"localnet\",\r\n    chainId: 3,\r\n  },\r\n];\r\n\r\nexport class ApiHarmonyProvider extends JsonRpcProvider implements HarmonyProvider {\r\n  static getNetwork(network: Networkish, shardingStructure?: ShardStructure[]): HarmonyNetwork {\r\n    if (typeof network === \"number\") {\r\n      let shardID = shardingStructure?.find((shard) => shard.current)?.shardID ?? 0;\r\n\r\n      const { name } = networks.find(({ chainId }) => chainId === network) ?? { name: \"unknown\" };\r\n      return {\r\n        shardID,\r\n        name,\r\n        chainId: network,\r\n      };\r\n    }\r\n\r\n    return network;\r\n  }\r\n\r\n  static getFormatter(): HarmonyFormatter {\r\n    return new HarmonyFormatter();\r\n  }\r\n\r\n  formatter!: HarmonyFormatter;\r\n\r\n  _networkPromise!: Promise<HarmonyNetwork>;\r\n  _network!: HarmonyNetwork;\r\n\r\n  _shardingStructure?: ShardStructure[]; // cache\r\n\r\n  constructor(url?: ConnectionInfo | string) {\r\n    super(url);\r\n    this._nextId = randomBytes(1).readUInt8();\r\n  }\r\n\r\n  get network(): HarmonyNetwork {\r\n    return this._network;\r\n  }\r\n\r\n  async detectNetwork(): Promise<HarmonyNetwork> {\r\n    await timer(0);\r\n\r\n    let chainId = null;\r\n    try {\r\n      chainId = await this.send(\"hmy_chainId\", []);\r\n    } catch (error) {\r\n      try {\r\n        chainId = await this.send(\"net_version\", []);\r\n      } catch (error) {}\r\n    }\r\n\r\n    // this is used to dectec the current shard\r\n    // maybe this could be inferred from network Id last digit\r\n    let shardingStructure = this._shardingStructure;\r\n    if (!shardingStructure) {\r\n      try {\r\n        shardingStructure = await this.send(\"hmy_getShardingStructure\", []);\r\n      } catch (error) {}\r\n    }\r\n\r\n    if (chainId != null) {\r\n      const getNetwork = getStatic<(network: Networkish, shardingStructure?: ShardStructure[]) => HarmonyNetwork>(\r\n        this.constructor,\r\n        \"getNetwork\"\r\n      );\r\n      try {\r\n        return getNetwork(BigNumber.from(chainId).toNumber(), shardingStructure);\r\n      } catch (error) {\r\n        return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\r\n          chainId: chainId,\r\n          event: \"invalidNetwork\",\r\n          serverError: error,\r\n        });\r\n      }\r\n    }\r\n\r\n    return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\r\n      event: \"noNetwork\",\r\n    });\r\n  }\r\n\r\n  async getCirculatingSupply(): Promise<BigNumber> {\r\n    return parseEther(await this.send(\"hmy_getCirculatingSupply\", []));\r\n  }\r\n\r\n  async getTotalSupply(): Promise<BigNumber> {\r\n    return parseEther(await this.send(\"hmy_getTotalSupply\", []));\r\n  }\r\n\r\n  async getEpoch(): Promise<number> {\r\n    return this.formatter.number(await this.send(\"hmy_getEpoch\", []));\r\n  }\r\n\r\n  async getEpochLastBlock(epoch: number): Promise<number> {\r\n    return this.formatter.number(await this.send(\"hmy_epochLastBlock\", [epoch]));\r\n  }\r\n\r\n  async getLeader(): Promise<string> {\r\n    return this.formatter.address(await this.send(\"hmy_getLeader\", []));\r\n  }\r\n\r\n  async getValidatorsAddresses(): Promise<Array<string>> {\r\n    const validators = await this.send(\"hmy_getAllValidatorAddresses\", []);\r\n    return validators.map((address: string) => this.formatter.address(address));\r\n  }\r\n\r\n  async getActiveValidatorsAddresses(): Promise<Array<string>> {\r\n    const validators = await this.send(\"hmy_getActiveValidatorAddresses\", []);\r\n    return validators.map((address: string) => this.formatter.address(address));\r\n  }\r\n\r\n  async getDelegationsByValidator(validatorAddress: string): Promise<Array<Delegation>> {\r\n    const result = await this.send(\"hmy_getDelegationsByValidator\", [validatorAddress]);\r\n    return result.map((delegation: string) => this.formatter.delegation(delegation));\r\n  }\r\n\r\n  async getDelegationsByDelegator(delegatorAddress: string): Promise<Array<Delegation>> {\r\n    const result = await this.send(\"hmy_getDelegationsByDelegator\", [delegatorAddress]);\r\n    return result.map((delegation: string) => this.formatter.delegation(delegation));\r\n  }\r\n\r\n  _wrapTransaction(tx: Transaction, hash?: string): TransactionResponse {\r\n    return <TransactionResponse>super._wrapTransaction(tx, hash);\r\n  }\r\n\r\n  _wrapStakingTransaction(tx: StakingTransaction, hash?: string): StakingTransactionResponse {\r\n    const response = <StakingTransactionResponse>tx;\r\n    response.hash = hash || '';\r\n    return response;\r\n  }\r\n\r\n  async sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse> {\r\n    await this.getNetwork();\r\n\r\n    const hexTx = hexlify(await Promise.resolve(signedTransaction));\r\n    const tx = this.formatter.transaction(signedTransaction);\r\n\r\n    try {\r\n      const hash = await this.perform(\"sendTransaction\", {\r\n        signedTransaction: hexTx,\r\n      });\r\n\r\n      return this._wrapTransaction(tx, hash);\r\n    } catch (error) {\r\n      (<any>error).transaction = tx;\r\n      (<any>error).transactionHash = tx.hash;\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async sendStakingTransaction(signedTransaction: string | Promise<string>): Promise<StakingTransactionResponse> {\r\n    await this.getNetwork();\r\n\r\n    const hexTx = hexlify(await Promise.resolve(signedTransaction));\r\n    const tx = this.formatter.stakingTransaction(signedTransaction);\r\n\r\n    try {\r\n      const hash = await this.perform(\"sendStackingTransaction\", {\r\n        signedTransaction: hexTx,\r\n      });\r\n\r\n      return this._wrapStakingTransaction(tx, hash);\r\n    } catch (error) {\r\n      (<any>error).transaction = tx;\r\n      (<any>error).transactionHash = tx.hash;\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  prepareRequest(method: string, params: any): [string, Array<any>] {\r\n    switch (method) {\r\n      case \"sendStackingTransaction\":\r\n        return [\"hmy_sendRawStakingTransaction\", [params.signedTransaction]];\r\n      case \"getStakingTransaction\":\r\n        return [\"hmy_getStakingTransactionByHash\", [params.transactionHash]];\r\n      case \"getCXTransactionReceipt\":\r\n        return [\"hmy_getCXReceiptByHash\", [params.transactionHash]];\r\n      default:\r\n        let [rpcMethod, rpcParams] = super.prepareRequest(method, params);\r\n\r\n        if (rpcMethod.startsWith(\"eth\")) {\r\n          rpcMethod = rpcMethod.replace(\"eth\", \"hmy\");\r\n        }\r\n\r\n        return [rpcMethod, rpcParams];\r\n    }\r\n  }\r\n\r\n  async _getBlock(\r\n    blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>,\r\n    includeTransactions?: boolean\r\n  ): Promise<Block | BlockWithTransactions> {\r\n    const block = (await super._getBlock(blockHashOrBlockTag, includeTransactions)) as Block | BlockWithTransactions;\r\n\r\n    block.shardID = this.network.shardID;\r\n\r\n    if (includeTransactions) {\r\n      let blockNumber: number | null = null;\r\n      for (let i = 0; i < (<BlockWithTransactions>block).stakingTransactions.length; i++) {\r\n        const tx = (<BlockWithTransactions>block).stakingTransactions[i];\r\n        if (tx.blockNumber == null) {\r\n          tx.confirmations = 0;\r\n        } else if (tx.confirmations == null) {\r\n          if (blockNumber == null) {\r\n            blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\r\n          }\r\n\r\n          // Add the confirmations using the fast block number (pessimistic)\r\n          let confirmations = blockNumber - tx.blockNumber + 1;\r\n          if (confirmations <= 0) {\r\n            confirmations = 1;\r\n          }\r\n          tx.confirmations = confirmations;\r\n        }\r\n      }\r\n    }\r\n\r\n    return block;\r\n  }\r\n\r\n  getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block> {\r\n    return <Promise<Block>>this._getBlock(blockHashOrBlockTag, false);\r\n  }\r\n\r\n  getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions> {\r\n    return <Promise<BlockWithTransactions>>this._getBlock(blockHashOrBlockTag, true);\r\n  }\r\n\r\n  getTransaction(transactionHash: string): Promise<TransactionResponse> {\r\n    return <Promise<TransactionResponse>>super.getTransaction(transactionHash);\r\n  }\r\n\r\n  async getStakingTransaction(transactionHash: string): Promise<StakingTransactionResponse> {\r\n    await this.getNetwork();\r\n    transactionHash = await transactionHash;\r\n\r\n    const params = { transactionHash: this.formatter.hash(transactionHash, true) };\r\n\r\n    return poll(\r\n      async () => {\r\n        const result = await this.perform(\"getStakingTransaction\", params);\r\n\r\n        const tx = this.formatter.stakingTransactionResponse(result);\r\n\r\n        if (tx.blockNumber == null) {\r\n          tx.confirmations = 0;\r\n        } else if (tx.confirmations == null) {\r\n          const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\r\n\r\n          // Add the confirmations using the fast block number (pessimistic)\r\n          let confirmations = blockNumber - tx.blockNumber + 1;\r\n          if (confirmations <= 0) {\r\n            confirmations = 1;\r\n          }\r\n          tx.confirmations = confirmations;\r\n        }\r\n\r\n        return this._wrapStakingTransaction(tx);\r\n      },\r\n      { oncePoll: this }\r\n    );\r\n  }\r\n\r\n  async getCXTransactionReceipt(transactionHash: string): Promise<CXTransactionReceipt> {\r\n    await this.getNetwork();\r\n    const params = { transactionHash: this.formatter.hash(transactionHash, true) };\r\n    return poll(\r\n      async () => {\r\n        const result = await this.perform(\"getCXTransactionReceipt\", params);\r\n        return this.formatter.cXReceipt(result);\r\n      },\r\n      { oncePoll: this }\r\n    );\r\n  }\r\n}\r\n"],"names":["undefined","HRP","tHRP","isBech32Address","raw","match","isBech32TestNetAddress","HarmonyAddress","basic","getBasic","isValidBasic","str","toTest","isValidChecksum","checksum","isValidBech32","bech32","isValidBech32TestNet","bech32TestNet","addr","isAddress","getHexAddress","substring","decode","prefix","words","hexlify","fromWords","Error","encode","toWords","arrayify","getAddress","address","error","Directive","logger","Logger","transactionFields","name","maxLength","numeric","length","allowedTransactionKeys","nonce","gasLimit","gasPrice","shardID","toShardID","to","value","data","chainId","formatNumber","result","stripZeros","BigNumber","from","toHexString","throwArgumentError","formatDecimal","parseUnits","formatDescription","Uint8Array","Buffer","identity","website","securityContact","details","formatComissionRates","rate","maxRate","maxChangeRate","formatMsg","type","CreateValidator","msg","validatorAddress","description","commissionRates","minSelfDelegation","maxTotalDelegation","slotPubKeys","map","key","slotKeySigs","sig","amount","EditValidator","commissionRate","slotKeyToRemove","slotKeyToAdd","slotKeySig","active","One","Two","Zero","Delegate","Undelegate","delegatorAddress","CollectRewards","serialize","transaction","signature","serializeStakingTransaction","serializeTransaction","checkProperties","fields","forEach","fieldInfo","options","hexPad","push","encodeTransaction","isBytesLike","v","Math","floor","RLP","splitSignature","recoveryParam","pop","r","s","handleAddress","handleNumber","handleDecimal","handleText","toString","handleValidatorDescription","handleValidatorCommissionRates","handleActive","status","eq","handleMsg","handleStakingTransaction","directive","toNumber","tx","hexZeroPad","isZero","slice","digest","keccak256","recoverAddress","hash","handleTransaction","parseTransaction","payload","parseStakingTransaction","parse","rawTransaction","Array","isArray","TRANSACTION_TYPES","HarmonyFormatter","getDefaultFormats","number","bind","bigNumber","decimal","transactionType","formats","accessList","transactionRequest","Formatter","allowNull","receipt","Object","assign","block","epoch","viewID","mixHash","stakingTransactions","arrayOf","stakingTransaction","blockHash","blockNumber","transactionIndex","confirmations","uint256","blockWithTransactions","stakingTransactionResponse","cXReceipt","createValidatorMsg","createValidatorRequestMsg","shallowCopy","editValidatorMsg","slotPubKeyToAdd","slotPubKeyToRemove","editValidatorRequestMsg","delegateMsg","undelegateMsg","collectRewardsMsg","undelegation","delegation","reward","undelegations","check","Amount","Epoch","formatUnits","maxCommissionRate","_block","format","transactionResponse","gas","input","creates","contractAddress","replace","sender","validator_address","delegator_address","Undelegations","timer","timeout","Promise","resolve","setTimeout","networks","ApiHarmonyProvider","url","_nextId","randomBytes","readUInt8","getNetwork","network","shardingStructure","find","shard","current","getFormatter","detectNetwork","send","_shardingStructure","getStatic","constructor","throwError","errors","NETWORK_ERROR","event","serverError","getCirculatingSupply","parseEther","getTotalSupply","getEpoch","formatter","getEpochLastBlock","getLeader","getValidatorsAddresses","validators","getActiveValidatorsAddresses","getDelegationsByValidator","getDelegationsByDelegator","_wrapTransaction","_wrapStakingTransaction","response","sendTransaction","signedTransaction","hexTx","perform","transactionHash","sendStakingTransaction","prepareRequest","method","params","rpcMethod","rpcParams","startsWith","_getBlock","blockHashOrBlockTag","includeTransactions","i","_getInternalBlockNumber","pollingInterval","getBlock","getBlockWithTransactions","getTransaction","getStakingTransaction","poll","oncePoll","getCXTransactionReceipt","_network","JsonRpcProvider"],"mappings":"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"}